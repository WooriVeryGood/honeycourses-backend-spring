# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: honeycoursesec2-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: honeycourses-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: honeycourses-deployment-group

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
    
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
      
    - name: Build with Gradle
      run: ./gradlew build -x test
      shell: bash
        
    - name: Make zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # script files 복사
    - name: Copy script
      run: cp ./*.sh ./deploy
      
    # S3에 업로드
    - name: Upload to S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # Deploy
    - name: Deploy
      run: |
        aws deploy create-deployment \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip \
        --region ap-northeast-2 \
